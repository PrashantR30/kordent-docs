name: Publish Docs

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Important: ensures tags are fetched

      - name: Get and Increment Latest Tag
        id: get_and_increment_tag
        run: |
          # Ensure tags are up-to-date
          git fetch --tags

          # Get the latest tag in the format v0.0.x
          latest_tag=$(git tag --list "v0.0.*" --sort=-version:refname | head -n 1)
          echo "Latest tag: $latest_tag"

          # Extract and increment the patch version
          if [[ "$latest_tag" =~ v([0-9]+)\.([0-9]+)\.([0-9]+) ]]; then
            major="${BASH_REMATCH[1]}"
            minor="${BASH_REMATCH[2]}"
            patch="${BASH_REMATCH[3]}"
            new_tag="v${major}.${minor}.$((patch + 1))"
          else
            echo "No valid tag found, starting at v0.0.1"
            new_tag="v0.0.1"
          fi

          echo "New tag: $new_tag"

          # Push the new tag back to the repository
          git tag "$new_tag"
          git push origin "$new_tag"

          # Output the tags for later steps
          echo "new_tag=$new_tag" >> $GITHUB_OUTPUT
          echo "latest_tag=$latest_tag" >> $GITHUB_OUTPUT

      - name: Get Last 3 Tags
        id: get_last_3_tags
        run: |
          # Get the latest 3 tags in descending order
          tags_array=( $(git tag --list "v*" --sort=-version:refname | head -n 3) )
          echo "Last 3 tags: ${tags_array[*]}"
          echo "tags=${tags_array[*]}" >> $GITHUB_OUTPUT

      - name: Show Tags
        run: |
          echo "Incremented tag: ${{ steps.get_and_increment_tag.outputs.new_tag }}"
          echo "Last 3 tags: ${{ steps.get_last_3_tags.outputs.tags }}"

      - name: Configure Git Credentials
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install mkdocs-material and mike
        run: |
          python -m pip install --upgrade pip
          pip install --disable-pip-version-check -r requirements.txt

      - name: Deploy Docs for the Last 3 Tags
        run: |
          IFS=' ' read -ra tags <<< "${{ steps.get_last_3_tags.outputs.tags }}"
          latest="${tags[0]}"

          for tag in "${tags[@]}"; do
            echo "Deploying docs for $tag..."

            # 1) Checkout the commit at this tag so that you get the correct doc files
            git checkout "$tag"

            # 2) Deploy docs from this snapshot
            mike deploy "$tag" --push
          done

          # Update alias for the latest version
          mike set-default "$latest" --push

